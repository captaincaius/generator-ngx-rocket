<% const run = command => `${props.packageManager} run ${command}${props.packageManager === 'npm' ? ' -s' : ''}` -%>
{
  "name": "<%= props.projectName %>",
  "version": "1.0.0",
  "private": true,
  <% if (props.target.includes('electron')) { -%>
     "main": "electron.main.js",
  <% } -%>
  "scripts": {
    "ng": "ng",
    "build": "<%= run('env') %> && ng build --prod",
    "start": "<%= run('env') %> && ng serve <%= props.ui !== 'ionic' ? '--aot ' : '' %>--proxy-config proxy.conf.js",
<% if (props.pwa) { -%>
    "serve:sw": "<%= run('build') %> && npx http-server ./<%= props.target.includes('cordova') ? 'www': 'dist' %> -p 4200",
<% } -%>
    "lint": "ng lint && stylelint \"src/**/*.scss\" --syntax scss && htmlhint \"src\" --config .htmlhintrc",
    "test": "<%= run('env') %> && ng test",
    "test:ci": "<%= run('env') %> && <%= run('lint') %> && ng test --code-coverage --watch=false",
    "e2e": "<%= run('env') %> && ng e2e",
    "translations:extract": "ngx-translate-extract --input ./src --output ./src/translations/template.json --format=json --clean -sort --marker extract",
    "docs": "hads ./docs -o",
    "env": "ngx-scripts env npm_package_version",
<% if (props.prettier) { -%>
    "prettier": "prettier --write \"./{src,e2e}/**/*.{ts,js,scss}\"",
    "prettier:check": "prettier --list-different \"./{src,e2e}/**/*.{ts,js,scss}\"",
    "postinstall": "<%= run('prettier') %>",
<%   if (options.git) { -%>
    "precommit": "pretty-quick --staged",
<%   } -%>
<% } -%>
<% if (props.target.includes('cordova')) { -%>
    "cordova:prepare": "ngx-scripts cordova prepare",
    "cordova:run": "ngx-scripts cordova run",
    "cordova:build": "ngx-scripts cordova build --device --release --copy dist",
    "cordova:clean": "ngx-scripts clean",
    "cordova": "cordova",
<% } -%>
<% if (props.target.includes('electron')) { -%>
    "electron:tsc": "tsc electron.main.ts",
    "electron:run": "electron .",
    "electron:build": "npm run electron:tsc && npm run env -s && ng build --prod --base-href ./dist.electron --output-path dist.electron",
    "electron:package:win32": "electron-packager . --overwrite --platform=win32 --arch=ia32 --out=dist.electron/out --icon=./resources/win/icon.ico",
    "electron:package:win64": "electron-packager . --overwrite --platform=win32 --arch=x64 --out=dist.electron/out  --icon=./resources/win/icon.ico",
    "electron:package:linux": "electron-packager . --overwrite --platform=linux --out=dist.electron/out --icon=./resources/win/icon.ico",
    "electron:package:mac": "electron-packager . --overwrite --platform=darwin --out=dist.electron/out --icon=./resources/mac/icon.icns",
    "electron:package": "npm run electron:package:win32 && npm run electron:package:win64 && npm run electron:package:linux && npm run electron:package:mac",
<% } -%>
    "generate": "ng generate"
  },
  "dependencies": {
    "@angular/animations": "^7.1.4",
    "@angular/common": "^7.1.4",
    "@angular/compiler": "^7.1.4",
    "@angular/core": "^7.1.4",
    "@angular/forms": "^7.1.4",
    "@angular/http": "^7.1.4",
    "@angular/platform-browser": "^7.1.4",
    "@angular/platform-browser-dynamic": "^7.1.4",
    "@angular/router": "^7.1.4",
    "@ngx-translate/core": "^10.0.1",
<% if (props.target.includes('cordova')) { -%>
    "@ionic-native/core": "5.0.0-beta.21",
    "@ionic-native/splash-screen": "5.0.0-beta.21",
    "@ionic-native/status-bar": "5.0.0-beta.21",
    "cordova-android": "^7.0.0",
    "cordova-custom-config": "^5.0.2",
    "cordova-ios": "^4.5.4",
    "cordova-plugin-device": "^2.0.2",
    "cordova-plugin-ionic-webview": "^2.1.0",
    "cordova-plugin-ionic-keyboard": "^2.1.2",
    "cordova-plugin-splashscreen": "^5.0.2",
    "cordova-plugin-statusbar": "^2.4.1",
    "cordova-plugin-whitelist": "^1.3.3",
<% } -%>
<% if (props.pwa) { -%>
    "@angular/service-worker": "^7.1.4",
<% } -%>
<% if (props.ui === 'ionic') { -%>
    "@ionic/angular": "4.0.0-rc.1",
<% } else if (props.ui === 'bootstrap') { -%>
    "@ng-bootstrap/ng-bootstrap": "^3.3.0",
    "bootstrap": "^4.1.1",
    "@fortawesome/fontawesome-free-webfonts": "^1.0.9",
<% } else if (props.ui === 'material') { -%>
    "@angular/cdk": "^7.0.1",
    "@angular/material": "^7.0.1",
    "@angular/flex-layout": "7.0.0-beta.19",
    "material-design-icons-iconfont": "^3.0.3",
    "hammerjs": "^2.0.8",
<% } -%>
<% if (props.angulartics) { -%>
    "angulartics2": "^7.0.0",
<% } -%>
    "core-js": "^2.5.6",
    "lodash": "^4.17.10",
    "rxjs": "^6.3.1",
<% if (props.ui === 'ionic' || props.target.includes('cordova')) { -%>
    "rxjs-compat": "^6.2.2",
<% } -%>
    "zone.js": "^0.8.26"
  },
  "devDependencies": {
<% if (props.target.includes('cordova')) { -%>
    "cordova": "^8.0.0",
<% } -%>
    "@angular/cli": "~7.0.2",
    "@angular/compiler-cli": "^7.0.0",
    "@angular/language-service": "^7.0.0",
    "@angular-devkit/build-angular": "^0.11.4",
    "@biesbjerg/ngx-translate-extract": "^2.3.4",
    "@ngx-rocket/scripts": "^3.0.0",
    "@types/jasmine": "^2.8.7",
    "@types/jasminewd2": "^2.0.3",
    "@types/lodash": "^4.14.108",
    "@types/node": "^8.10.13",
    "codelyzer": "^4.4.4",
<% if (props.target.includes('electron')) { -%>
    "electron": "^2.0.6",
    "electron-packager": "^12.1.0",
<% } -%>
    "hads": "^1.7.0",
    "htmlhint": "^0.10.0",
    "https-proxy-agent": "^2.0.0",
    "jasmine-core": "~2.99.1",
    "jasmine-spec-reporter": "~4.2.1",
    "karma": "~3.0.0",
    "karma-chrome-launcher": "^2.2.0",
    "karma-cli": "~1.0.1",
    "karma-coverage-istanbul-reporter": "^2.0.2",
    "karma-jasmine": "^1.1.2",
    "karma-jasmine-html-reporter": "^0.2.2",
    "karma-junit-reporter": "^1.2.0",
<% if (props.prettier) { -%>
    "prettier": "^1.14.0",
    "tslint-config-prettier": "^1.14.0",
    "stylelint-config-prettier": "^4.0.0",
<%   if (options.git) { -%>
    "pretty-quick": "^1.6.0",
    "husky": "^0.14.3",
<%   } -%>
<% } -%>
    "protractor": "~5.4.0",
<% if (!options['external-chrome']) { -%>
    "puppeteer": "^1.4.0",
<% } -%>
    "stylelint": "~9.6.0",
    "stylelint-config-recommended-scss": "~3.2.0",
    "stylelint-config-standard": "~18.2.0",
    "stylelint-scss": "~3.3.0",
    "ts-node": "~7.0.1",
    "tslint": "~5.11.0",
    "typescript": "~3.1.3"
<% if (props.prettier) { -%>
  },
  "prettier": {
    "singleQuote": true,
    "overrides": [
      {
        "files": "*.scss",
        "options": {
          "singleQuote": false
        }
      }
    ]
<% } -%>
<% if (props.target.includes('cordova')) { -%>
  },
  "cordova": {
    "platforms": [
      "android",
      "ios"
    ],
    "plugins": {
      "cordova-custom-config": {},
      "cordova-plugin-device": {},
      "cordova-plugin-splashscreen": {},
      "cordova-plugin-statusbar": {},
      "cordova-plugin-whitelist": {},
      "cordova-plugin-ionic-webview": {},
      "cordova-plugin-ionic-keyboard": {}
    }
<% } -%>
  }
}
